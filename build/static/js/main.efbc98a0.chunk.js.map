{"version":3,"sources":["components/Chat.tsx","logo.svg","components/Navbar.tsx","components/ProgressBars.tsx","components/ToDirectorModal.tsx","components/RawMaterialDetails.tsx","components/RawMaterialSelector.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Chat","message","answers","onSubmitted","React","useState","showUserMesssage","setShowUserMessage","showMessages","setShowMessages","prevMessagRef","useRef","prevMessage","current","useEffect","className","Segment","Icon","name","size","map","answer","idx","initials","Form","TextArea","value","disabled","placeholder","Button","primary","icon","onClick","timer","setTimeout","submitMessage","Navbar","title","Menu","Item","window","location","href","alt","src","logo","Header","ProgressBars","co2","bio","economy","co2Label","bioLabel","economyLabel","Progress","percent","color","ToDirectorModal","buttonText","choice","header","feedback","enableSelect","open","setOpen","sent","setSent","Modal","onClose","onOpen","trigger","secondary","Content","Description","Actions","content","labelPosition","RawMaterialDetails","id","description","imageUrl","selectedHeader","Image","RawMaterialsSelector","materials","onSelect","selected","vertical","items","forEach","material","push","key","active","materialToMenuItem","tabular","App","selectedMaterial","setSeletedMaterial","selectedSubMaterial","setSeletedSubMaterial","enableMaterialSelect","setEnableMaterialSelect","appData","setAppData","chatMessage","setChatMessage","chatAnswers","setChatAnswers","fetch","then","res","json","data","setDefaultChatMessage","pageTitle","Grid","columns","stackable","Row","Column","floated","width","undefined","subMaterials","chooseTypeHeader","metadata","co2Score","bioScore","economyScore","medatadataHeaders","chooseMaterialHeader","frontPageImage","emailText","writeEmail","thanksForMessage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efbc98a0.chunk.js","sourcesContent":["import React from 'react';\nimport { Segment, Form, TextArea, Button, Icon } from 'semantic-ui-react';\n\nimport './Chat.less';\n\ninterface Props {\n  answers?:  any[],\n  message?: string,\n  onSubmitted?: ()=>void,\n}\n\nconst Chat = ({message= '', answers = [], onSubmitted=()=>{} }: Props) => {\n\n  const [showUserMesssage, setShowUserMessage] = React.useState<boolean>(false);\n  const [showMessages, setShowMessages] = React.useState<boolean>(false);\n\n  const prevMessagRef = React.useRef('');\n  const prevMessage = prevMessagRef.current;\n\n  React.useEffect(() => {\n    prevMessagRef.current = message;\n    if (message !== prevMessage) {\n      setShowMessages(false);\n      setShowUserMessage(false);\n    }\n  });\n\n\n  const submitMessage = () => {\n    setShowUserMessage(true);\n    onSubmitted();\n\n    const timer = setTimeout(() => {\n      setShowMessages(true);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }\n\n  return (\n    <div className=\"chat\">\n      <Segment className=\"chat-wrapper\">\n        <div>\n          <div className=\"chat-messages\"> \n            {\n              showUserMesssage && message !== '' &&\n              <div className=\"chat-messages-user\">\n                <Icon name=\"user\" size=\"large\"></Icon>\n                <p>{message}</p>\n              </div>\n            }\n            {\n              showMessages && answers.map( (answer, idx) => {\n                return <div key={idx} className=\"chat-messages-message\"> \n                  {/* <Icon name=\"user\" size=\"large\"></Icon> */}\n                  <div className=\"chat-messages-message-user-icon\"><p>{answer.initials}</p></div>\n                  <p>{answer.message}</p>\n                </div>\n              })\n            }\n          </div>\n        </div>\n        <Form>\n          <TextArea value={showUserMesssage ? '' : message} disabled placeholder=\"Besked...\"></TextArea>     \n          <Button className={showUserMesssage ? '' : 'pulsate'} primary icon onClick={() => {submitMessage()}}>\n            <Icon name='angle right' />\n          </Button>\n        </Form>\n      </Segment>\n    </div>\n  )\n\n}\n\nexport default Chat;","export default __webpack_public_path__ + \"static/media/logo.9b8c359f.svg\";","import React from 'react';\nimport { Menu, Header } from 'semantic-ui-react';\nimport logo from '../logo.svg';\n\nimport './Navbar.less';\n\ninterface NavbarProps {\n  title?: string\n}\n\nconst Navbar = ({title}: NavbarProps) => {\n\n  return (\n    <div className=\"navbar\">\n      <Menu>\n        <Menu.Item\n          name='Life'\n          onClick={()=>{window.location.href=\"/\"}}\n        >\n          <img alt=\"text\" src={logo} />\n        </Menu.Item>\n        { \n          title && \n          <Menu.Item className=\"navbar-title\">\n            <Header size='large'>{title}</Header>\n          </Menu.Item>\n        }\n      </Menu>\n    </div>\n  )\n\n}\n\nexport default Navbar;\n\n","import React from 'react';\nimport { Progress } from 'semantic-ui-react';\nimport './ProgressBars.less';\n\ninterface ProgressBarsProps {\n  co2: number | undefined,\n  bio: number | undefined,\n  economy: number | undefined,\n  co2Label?: string,\n  bioLabel?: string,\n  economyLabel?: string\n}\n\nconst ProgressBars = ({co2, bio, economy, co2Label='', bioLabel='', economyLabel=''}: ProgressBarsProps) => {\n\n  return (\n    <div className=\"progress-bars\">\n      <Progress percent={co2} color={'red'} size={'small'}>\n        {co2Label}\n      </Progress>\n      <Progress percent={bio} color={'teal'} size={'small'}>\n        {bioLabel}\n      </Progress>\n      <Progress percent={economy} color={'blue'} size={'small'}>\n        {economyLabel}\n      </Progress>\n    </div>\n  )\n\n}\n\nexport default ProgressBars;\n\n","import React from 'react'\nimport { Button, Form, Modal, TextArea } from 'semantic-ui-react'\n\ninterface Props {\n  buttonText: string,\n  choice: string,\n  header?: string,\n  feedback?: string,\n  enableSelect?: boolean\n}\n\nfunction ToDirectorModal({buttonText, choice, header, feedback, enableSelect}: Props) {\n  const [open, setOpen] = React.useState(false);\n  const [sent, setSent] = React.useState(false)\n\n  return (\n    <Modal\n      onClose={() => {setOpen(false); setSent(false);}}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button disabled={enableSelect===false} secondary>{buttonText}</Button>}\n    >\n      <Modal.Content>\n        <Modal.Description>\n          {\n            sent === false && \n            <>\n              <p>{header} \"{choice}\".</p>\n              <Form>\n                <TextArea placeholder='Besked...' />\n              </Form>\n            </>\n          }\n          {\n            sent && \n            <>\n              <p>\"{feedback}\"</p>\n            </>\n          }\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        {\n          sent === false && \n          <Button\n            content=\"Send email\"\n            labelPosition='right'\n            icon='envelope'\n            onClick={() => setSent(true)}\n            primary\n          />\n        }\n        {\n          sent && \n          <Button\n            onClick={() => {setOpen(false); setSent(false);}}\n            primary\n          >Luk</Button>\n        }\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default ToDirectorModal\n","import './RawMaterialDetails.less';\n\nimport React from 'react';\nimport { Header, Image } from 'semantic-ui-react';\n\nimport ToDirectorModal from './ToDirectorModal';\n\ninterface Props {\n  id: string,\n  title: string,\n  description: string,\n  imageUrl?: string,\n  selectedHeader?: string,\n  feedback?: string,\n  enableSelect?: boolean\n}\n\nconst RawMaterialDetails = ({ id, title, description, imageUrl, selectedHeader, feedback, enableSelect}: Props ) => {\n\n  return (\n    <div className=\"raw-material-details\">\n      <div className=\"raw-material-details-image\">\n        <Image src={imageUrl} />\n      </div>\n      <div className=\"raw-material-details-description\">\n        <Header>{title}</Header>\n        <p>{description}</p>\n        <ToDirectorModal \n          buttonText={`Vælg \"${title}\" og send mail til direktøren`} \n          choice={title || ''} \n          header={selectedHeader}\n          feedback={feedback}\n          enableSelect={enableSelect}\n        />\n      </div>\n    </div>\n  )\n\n}\n\nexport default RawMaterialDetails;","import './RawMaterialSelector.less';\nimport React from 'react';\nimport { Menu } from 'semantic-ui-react';\n\nimport { RawMaterial } from '../interfaces/RawMaterial'; \n\ninterface RawMaterialsProps { \n  materials: RawMaterial[],\n  onSelect: (material: any)=>void,\n  selected?: any | null,\n  vertical?: boolean\n}\n\ninterface MenuItem {\n  key: string,\n  active: boolean,\n  name: string,\n  content: string,\n  onClick?: ()=>void\n}\n\nconst RawMaterialsSelector = ({ materials, onSelect, selected, vertical}:RawMaterialsProps) => {\n\n  const items:MenuItem[] = [];\n  \n  const materialToMenuItem = (material: RawMaterial):MenuItem => {\n    return {\n      key: material.id, \n      active: material.id === selected?.id, \n      name: material.title,\n      content: material.title,\n      onClick: () => {\n        onSelect(material);\n      }\n    }\n  }\n\n  materials.forEach((material: RawMaterial) => items.push(materialToMenuItem(material)));\n\n  return (\n    <div className=\"raw-material-selector\">\n      <Menu items={items} vertical={vertical} tabular/>\n    </div>\n  )\n}\n\nexport default RawMaterialsSelector;","import './App.less';\nimport React from 'react';\nimport { Grid, Image, Header } from 'semantic-ui-react';\nimport Chat from './components/Chat';\nimport Navbar from './components/Navbar';\nimport ProgressBars from './components/ProgressBars';\nimport RawMaterialDetails from './components/RawMaterialDetails';\nimport RawMaterialsSelector from './components/RawMaterialSelector';\n\nimport { RawMaterial } from './interfaces/RawMaterial'; \n\nfunction App() {\n  \n  const [selectedMaterial, setSeletedMaterial] = React.useState<RawMaterial | undefined>();\n  const [selectedSubMaterial, setSeletedSubMaterial] = React.useState<RawMaterial | undefined>();\n  const [enableMaterialSelect, setEnableMaterialSelect] = React.useState<boolean>(false);\n  const [appData, setAppData] = React.useState<any | undefined>();\n  const [chatMessage, setChatMessage] =  React.useState<string>();\n  const [chatAnswers, setChatAnswers] =  React.useState<any[] | undefined>([]);\n  \n\n  const onMaterialSelect = (material: RawMaterial | undefined) => {\n    setSeletedSubMaterial(undefined);\n    setSeletedMaterial(material);\n    setEnableMaterialSelect(false);\n    setDefaultChatMessage(appData);\n  }\n\n  const onSubMaterialSelect = (material: RawMaterial | undefined) => {\n    setSeletedSubMaterial(material);\n    setEnableMaterialSelect(false);\n    setChatMessage(material?.chatMessage);\n    setChatAnswers(material?.chatAnswers);\n  }\n\n  React.useEffect(()=> {\n    fetch('./data/appData.json')\n      .then(res=>res.json())\n      .then( data => {\n        setAppData(data);\n        setDefaultChatMessage(data);\n      }\n    );\n  }, []);\n\n  const setDefaultChatMessage = (data: any) => {\n    setChatMessage(data?.chatMessage);\n    setChatAnswers(data?.chatAnswers);\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        appData &&\n        <>\n          <Navbar title={appData?.pageTitle} />\n          <Grid columns={2} stackable>\n            <Grid.Row>\n              <Grid.Column floated='left' width={12}>\n                <div className=\"App-materials\">\n                  <RawMaterialsSelector \n                    materials={appData?.materials} \n                    selected={selectedMaterial} \n                    onSelect={onMaterialSelect}\n                  />\n                  {\n                    !!selectedMaterial &&\n                    <>\n                      <RawMaterialsSelector \n                        materials={selectedMaterial?.subMaterials || []} \n                        selected={selectedSubMaterial} \n                        onSelect={onSubMaterialSelect} \n                        vertical={true}\n                      />\n                      {\n                        !selectedSubMaterial &&\n                        <Header className=\"App-materials-header-type\" size='large'>{appData?.chooseTypeHeader}</Header>\n                      }\n                    </>\n                  }\n                  {\n                    !!selectedSubMaterial &&\n                    <ProgressBars \n                      co2={selectedSubMaterial?.metadata?.co2Score} \n                      bio={selectedSubMaterial?.metadata?.bioScore} \n                      economy={selectedSubMaterial?.metadata?.economyScore}\n                      co2Label={appData?.medatadataHeaders?.co2} \n                      bioLabel={appData?.medatadataHeaders?.bio} \n                      economyLabel={appData?.medatadataHeaders?.economy}\n                    />\n                  }\n                  {\n                    !selectedMaterial &&\n                    <>\n                      <Header className=\"App-materials-header\" size='large'>{appData?.chooseMaterialHeader}</Header>\n                      <Image className=\"App-materials-frontpage-img\" src={appData?.frontPageImage} />\n                    </>\n                  }\n                  {\n                    !!selectedSubMaterial && \n                    <RawMaterialDetails \n                      id={selectedSubMaterial.id}\n                      title={selectedSubMaterial.title}\n                      description={selectedSubMaterial.description}\n                      imageUrl={selectedSubMaterial.imageUrl}\n                      selectedHeader={appData?.emailText.writeEmail}\n                      feedback={appData?.emailText.thanksForMessage}\n                      enableSelect={enableMaterialSelect}\n                    />\n                  }\n                </div>        \n              </Grid.Column>\n              <Grid.Column floated='right' width={4}>\n                <Chat message={chatMessage} answers={chatAnswers} onSubmitted={() => {setEnableMaterialSelect(true)}} ></Chat>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-less/semantic.less';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}